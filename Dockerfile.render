# Multi-stage build
FROM node:18-alpine as frontend-build
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci
COPY frontend/ ./
# Debug: verificar estrutura de diret√≥rios
RUN ls -la
RUN ls -la src/
RUN ls -la src/lib/
RUN npm run build

# Backend
FROM python:3.11-slim
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    nginx \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY backend/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend
COPY backend/ ./

# Copy frontend build
COPY --from=frontend-build /app/frontend/dist ./frontend/dist

# Configure nginx
COPY nginx.render.conf /etc/nginx/sites-available/default
RUN ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

# Create directories
RUN mkdir -p /app/media /app/static /app/db

# Expose port
EXPOSE 80

# Start script
COPY start.render.sh ./
RUN chmod +x start.render.sh
CMD ["./start.render.sh"]
